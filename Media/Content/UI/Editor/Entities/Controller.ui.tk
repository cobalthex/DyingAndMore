List {
	BorderColor: [255 255 255 64];
	Padding: 10;
	Margin: 10;
    HorizontalAlignment: Alignment.Stretch;

    Children: [
        ControllerSelect {
    		HorizontalAlignment: Alignment.Stretch;
    		AllowDefaultValue: true;
            Bindings: [
                Binding {
                    Source: "Controller";
                    Target: "Instance";
                    Direction: BindingDirection.TwoWay;
                }
            ];
        };
		Switch {
	    	ChildBindScope: "Controller";
    		HorizontalAlignment: Alignment.Stretch;
			Bindings: [
			    Binding {
			        Source: "Controller:typename";
			        Target: "Value";
			    }
			];
			Items: {
			    ArtilleryController: List {
    				HorizontalAlignment: Alignment.Stretch;
					Direction: Direction.Vertical;
					Margin: 10;
					Children: [
						Static { Text: "Search Range"; };
						NumericInput {
							Minimum: 1;
							Maximum: 1000;
							Bindings: [{
								Source: "MaxRange"; #todo: this doesnt rebind ;; binding scope?
								Target: "Value";
								Direction: BindingDirection.TwoWay;
							}];
						};
						CheckBox {
							Text: "Can rotate to face target";
							Bindings: [{
								Source: "CanRotate"; #todo: this doesnt rebind ;; binding scope?
								Target: "IsChecked";
								Direction: BindingDirection.TwoWay;
							}];
						};
						CheckBox {
							Text: "Show targeting sweep lines";
							Bindings: [{
								Source: "ShowSweepLines"; #todo: this doesnt rebind ;; binding scope?
								Target: "IsChecked";
								Direction: BindingDirection.TwoWay;
							}];
						};
					];
			    };

			    AIController: List {
			    	Margin: 10;
					HorizontalAlignment: Alignment.Stretch;
					Children: [
						Static { Text: "`_Sight Range"; };
						NumericInput {
    						HorizontalAlignment: Alignment.Stretch;
							Minimum: 0;
							Maximum: 10000;
							Bindings: [
							    Binding {
							        Source: "SightRange";
							        Target: "Value";
							    }
							]
						}

						Static { Text: "`_Default Behaviors"; };
						#@"./Behaviors.ui.tk";
						AutoUI {
							BindSource: "DefaultBehaviors";
						}
				    ];
			    };
			};
		};
    ];
};