List {
    HorizontalAlignment: Alignment.Stretch;
	Margin: 10;
    Children: [
	    WeaponSelect {
            HorizontalAlignment: Alignment.Stretch;
            AllowDefaultValue: true;
	        Bindings: [
	            Binding {
	                Direction: BindingDirection.TwoWay;
	                Source: "Weapon";
	                Target: "Instance";
	            }
	        ];
	    };

		Switch {
    		HorizontalAlignment: Alignment.Stretch;
			ChildBindScope: "Weapon";
			Bindings: [
			    Binding {
			        Source: "Weapon:typename";
			        Target: "Value";
			    }
			];
			Items: {
			    GunInstance: List {
    				HorizontalAlignment: Alignment.Stretch;
			    	Children: [
					    Static { Text: "Ammo count"; };
					    NumericInput {
    						HorizontalAlignment: Alignment.Stretch;
					    	Minimum: 0;
							Bindings: [
							    Binding {
							        Source: "CurrentAmmo";
							        Target: "Value";
	                				Direction: BindingDirection.TwoWay;
							    }
							];
					    }
				    ];
			    };
			    SpawnerInstance: List {
    				HorizontalAlignment: Alignment.Stretch;
			    	Children: [
					    Static { Text: "Squad"; };
			    		SquadSelect {
							HorizontalAlignment: Alignment.Stretch;
			    			Bindings: [
			    				Binding {
			    					Source: "Squad";
			    					Target: "SelectedItem";
			    					Direction: BindingDirection.TwoWay;
			    				}
			    			];
			    			ItemUI: List {
			    				Children: [
			    					Static {
			    						Bindings: [
										    Binding {
										        Source: "Name";
										        Target: "Text";
										    };
										];
			    					};
			    					List {
			    						Direction: Direction.Horizontal;
			    						Margin: 10;
				    					Children: [
					    					Static {
					    						Bindings: [
												    Binding {
												        Source: "Leader.Name";
												        Target: "Text";
												        DefaultValue: "(None)";
												        Converter: StringFormatConverter {
												        	Format: "Leader: {0}";
												        }
												    };
												];
					    					};
					    					Static {
					    						Bindings: [
												    Binding {
												        Source: "Units.Count";
												        Target: "Text";
												        Converter: StringFormatConverter {
												        	Format: "- Units: {0}";
												        }
												    };
												];
											};
				    					];
				    				};
			    				];
			    			};
			    		};
		    		];
			    };
			};
		};
    ];
};