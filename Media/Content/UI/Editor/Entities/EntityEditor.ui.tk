List {
    Name: "Entity properties editor";
    IsModal: true;
    HorizontalAlignment: Alignment.Middle;
    VerticalAlignment: Alignment.Middle;
	Style: "Frame";
	Margin: 10;

    #EventCommands: {
    #    Drag: "MoveElement";
    #}

    Children: [
        Scrollbox {
            Size: [600 500];
            InnerPadding: 10;
            Children: [
                List {
                    Direction: Direction.Vertical;
                    HorizontalAlignment: Alignment.Stretch;
                    Margin: 10;

                    Children: [
                        Static { Text: "`_Name"; }
                        TextInput {
                            HorizontalAlignment: Alignment.Stretch;
                            Padding: [4 2];
                            Bindings: [
                                {
                                    Direction: BindingDirection.TwoWay;
                                    Source: "Name";
                                    Target: "Text";
                                };
                            ];
                        };
                        Switch {
                            HorizontalAlignment: Alignment.Stretch;
                            Bindings: [
                                Binding {
                                    Source: ":typename";
                                    Target: "Value";
                                }
                            ];
                            Items: {
                                ActorInstance: List {
                                    HorizontalAlignment: Alignment.Stretch;
                                    Children: [
                						Static { Text: "`_Health"; };
                                        List {
                                            HorizontalAlignment: Alignment.Stretch;
                                            Direction: Direction.Horizontal;
                                            Children: [
                                                NumericInput {
                                                    HorizontalAlignment: Alignment.Stretch;
                                                    Bindings: [
                                                        Binding {
                                                            Direction: BindingDirection.TwoWay;
                                                            Source: "CurrentHealth";
                                                            Target: "Value";
                                                        };
                                                    ];
                                                    Minimum: 0;
                                                    Maximum: 2E9;
                                                };

                                                Static { Text: "/"; }

                                                Static {
                                                    HorizontalAlignment: Alignment.Stretch;
                                                    Bindings: [
                                                        Binding {
                                                            Source: "Class.MaxHealth";
                                                            Target: "Text";
                                                        };
                                                    ];
                                                }
                                            ];
                                        };

                						#conditions
                						#actions

                                        Static { Text: "`_Factions"; };
                                        FactionSelect {
                                            Bindings: [
                                                {
                                                    Direction: BindingDirection.TwoWay;
                                                    Source: "Factions";
                                                    Target: "Value";
                                                };
                                            ];
                                        }

                                        Static { Text: "`_Controller"; };
                                        @"./Controller.ui.tk";

                                        Static { Text: "`_Weapon"; };
                                        @"./Weapon.ui.tk";
                                    ];
                                };
                            };
                        };
                    ];
                };
            ];
        };

        Static {
            Style: "Button";
            HorizontalAlignment: Alignment.Middle;
            Text: "Close";
            EventCommands: {
                Click: "CloseModal";
            }
        };
    ];
}