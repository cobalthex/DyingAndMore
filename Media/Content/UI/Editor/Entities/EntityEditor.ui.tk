List {
    Name: "Entity properties editor";
    IsModal: true;
    HorizontalAlignment: Alignment.Middle;
    VerticalAlignment: Alignment.Middle;

    Children: [
        List {
            Direction: Direction.Horizontal;
            HorizontalAlignment: Alignment.Stretch;
            EventCommands: { Drag: "DragModal"; };

            Children: [
                Static {
                    VerticalAlignment: Alignment.Middle;
                    Style: "Header";
                    Bindings: [
                        Binding {
                            Source: ":typename";
                            Target: "Text";
                            Converter: TextCaseConverter {
                                DesiredCase: TextCase.Sentence;
                            }
                        };
                    ];
                };

                @!"UI/CloseButton.ui.tk";
            ];
        };

        Scrollbox {
            Style: "Frame";
            Size: [650 650];
            InnerPadding: 10;
            Children: [
                List {
                    Direction: Direction.Vertical;
                    HorizontalAlignment: Alignment.Stretch;
                    Margin: 10;

                    Children: [
                        Static { Text: "`_Name"; }
                        TextInput {
                            HorizontalAlignment: Alignment.Stretch;
                            Bindings: [
                                {
                                    Direction: BindingDirection.TwoWay;
                                    Source: "Name";
                                    Target: "Text";
                                };
                            ];
                        };
                        Switch {
                            HorizontalAlignment: Alignment.Stretch;
                            Bindings: [
                                Binding {
                                    Source: ":typename";
                                    Target: "Value";
                                }
                            ];
                            Items: {
                                ActorInstance: List {
                                    HorizontalAlignment: Alignment.Stretch;
                                    Children: [
                						Static { Text: "`_Health"; };
                                        List {
                                            HorizontalAlignment: Alignment.Stretch;
                                            Direction: Direction.Horizontal;
                                            Children: [
                                                NumericInput {
                                                    HorizontalAlignment: Alignment.Stretch;
                                                    Bindings: [
                                                        Binding {
                                                            Source: "CurrentHealth";
                                                            Target: "Value";
                                                            Direction: BindingDirection.TwoWay;
                                                        };
                                                    ];
                                                    Minimum: 0;
                                                    Maximum: 2E9;
                                                };

                                                Static { Text: "/"; }

                                                Static {
                                                    HorizontalAlignment: Alignment.Stretch;
                                                    Bindings: [
                                                        Binding {
                                                            Source: "Class.MaxHealth";
                                                            Target: "Text";
                                                        };
                                                    ];
                                                }
                                            ];
                                        };
                                        Checkbox {
                                            Text: "Is Awake?";
                                            Bindings: [
                                                Binding {
                                                    Source: "IsAwake";
                                                    Target: "IsChecked";
                                                    Direction: BindingDirection.TwoWay;
                                                };
                                            ];
                                        }

                						#conditions
                						#actions

                                        Static { Text: "`_Factions"; };
                                        FactionSelect {
                                            Bindings: [
                                                {
                                                    Direction: BindingDirection.TwoWay;
                                                    Source: "Factions";
                                                    Target: "Value";
                                                };
                                            ];
                                        }

                                        Static { Text: "`_Controller"; };
                                        @"./Controller.ui.tk";

                                        Static { Text: "`_Weapon"; };
                                        @"./Weapon.ui.tk";
                                    ];
                                };

                                # pickups
                            };
                        };
                    ];
                };
            ];
        };
    ];
}