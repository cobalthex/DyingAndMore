List {
    Name: "Entity properties editor";
    IsModal: true;
    HorizontalAlignment: Alignment.Middle;
    VerticalAlignment: Alignment.Middle;
    BackgroundColor: [32 0 128 192];
    Margin: 10;
    Padding: 10;

    Children: [
        Scrollbox {
            Size: 400;
            Children: [
                List {
                    Direction: Direction.Vertical;
                    HorizontalAlignment: Alignment.Stretch;
                    Margin: 10;

                    Children: [
                        Static { Text: "Name"; }
                        TextInput {
                            HorizontalAlignment: Alignment.Stretch;
                            Padding: [4 2];
                            Bindings: [
                                {
                                    Direction: BindingDirection.TwoWay;
                                    Source: "Name";
                                    Target: "Text";
                                };
                            ];
                        };

                        List {
                            margin: 10;
                            Children: [
        						Static { Text: "Actor Properties"; };
        						Static { Text: "Current Health"; };
        						NumericInput {
                                    Name: "helf";
        							Bindings: [
        								Binding {
        									Direction: BindingDirection.TwoWay;
        									Source: "CurrentHealth";
        									Target: "Value";
        								};
        							];
        							Minimum: 0;
        							Maximum: 2E9;
        						};

        						#weapon
                                Static { Text: "Weapon"; };
                                WeaponSelect {
                                    Bindings: [
                                        Binding {
                                            Direction: BindingDirection.TwoWay;
                                            Source: "Weapon";
                                            Target: "Instance";
                                        }
                                    ];
                                };

        						#conditions
        						#actions

                                Static { Text: "Controller"; };
                                ControllerSelect {
                                    Bindings: [
                                        Binding {
                                            Source: "Controller";
                                            Target: "Instance";
                                            Direction: BindingDirection.TwoWay;
                                        }
                                    ];
                                };

                                Switch {
                                    Bindings: [
                                        Binding {
                                            Source: "Controller:typename";
                                            Target: "Value";
                                        }
                                    ];
                                    Items: {
                                        ArtilleryController: List {
											Direction: Direction.Vertical;
											Margin: 10;
											Children: [
												Static { Text: "Search Range"; };
												NumericInput {
													Minimum: 1;
													Maximum: 1000;
													Bindings: [{
														Source: "Controller.MaxRange"; #todo: this doesnt rebind ;; binding scope?
														Target: "Value";
														Direction: BindingDirection.TwoWay;
													}];
												};
												CheckBox {
													Text: "Can rotate to face target";
													Bindings: [{
														Source: "Controller.CanRotate"; #todo: this doesnt rebind ;; binding scope?
														Target: "IsChecked";
														Direction: BindingDirection.TwoWay;
													}];
												};
												CheckBox {
													Text: "Show targeting sweep lines";
													Bindings: [{
														Source: "Controller.ShowSweepLines"; #todo: this doesnt rebind ;; binding scope?
														Target: "IsChecked";
														Direction: BindingDirection.TwoWay;
													}];
												};
												# entity picker ItemList
											];
                                        };

                                        InputController: {
                                            Text: "[Todo Player]";
                                        };

                                        AIController: {
                                            Text: "[Todo AI]";
                                        };
                                    }
                                }
                            ];
                        };
                    ];
                };
            ];
        };

        Static {
            Padding: [10 5];
            HorizontalAlignment: Alignment.Middle;
            Text: "Close";
            EventCommands: {
                Click: "CloseModal";
            }
        };
    ];
}