List {
    Name: "Trigger Editor";
    IsModal: true;
    HorizontalAlignment: Alignment.Middle;
    VerticalAlignment: Alignment.Middle;
	Style: "Frame";
    Margin: 10;
    Padding: 10;

    Children: [
        Scrollbox {
            Size: [400 400];
            InnerPadding: 10;
            ScrollBarUI: {
                Padding: 3;
                BorderColor: Color.White;
            }
            Children: [
                List {
                    Direction: Direction.Vertical;
                    HorizontalAlignment: Alignment.Stretch;
                    Margin: 10;

                    Children: [
                        Static { Text: "`_Name"; }
                        TextInput {
                        	HasFocus: true;
                            HorizontalAlignment: Alignment.Stretch;
                            Padding: [4 2];
                            Bindings: [
                                {
                                    Direction: BindingDirection.TwoWay;
                                    Source: "Name";
                                    Target: "Text";
                                };
                            ];
                        };

                        Divider { };

                        Static { Text: "`_Filter"; }
                        TriggerFilterSelect {
                            HorizontalAlignment: Alignment.Stretch;
                        	Bindings: [
                                {
                                    Direction: BindingDirection.TwoWay;
                                    Source: "Filter";
                                    Target: "Instance";
                                };
                        	];
                        }

						Switch {
                            HorizontalAlignment: Alignment.Stretch;
							Bindings: [
							    Binding {
							        Source: "Filter:typename";
							        Target: "Value";
							    }
							];
							Items: {
							    ActorTriggerFilter: List {
                                    HorizontalAlignment: Alignment.Stretch;
							    	Margin: 10;
							    	Children: [
							    		Static { Text: "`_Factions"; }
							    		FactionSelect {
                                            HorizontalAlignment: Alignment.Stretch;
				                        	Bindings: [
				                                {
				                                    Direction: BindingDirection.TwoWay;
				                                    Source: "Filter.Factions"; #todo: this doesnt rebind ;; binding scope?
				                                    Target: "Value";
				                                };
				                        	];
							    		}
							    	];
							    }
							};
						};

                        Divider { };

                        Static { Text: "`_Commands (On Enter)"; }
                        GameCommandsList {
                            HorizontalAlignment: Alignment.Stretch;
                            Bindings: [
                                {
                                    Direction: BindingDirection.TwoWay;
                                    Source: "OnEnterCommands";
                                    Target: "Items";
                                };
                            ];

                            ItemUI: List {
                                Direction: Direction.Horizontal;
                                Margin: 10;
                                Children: [
                                    Static {
                                        name: "foo";
                                        Bindings: [
                                            Binding {
                                                Source: ":string";
                                                Target: "Text";
                                            };
                                        ];
                                    };
                                ];
                            };

                            AddItemTemplate: EntityCommand { };

                            AddItemUI: List {
                                HorizontalAlignment: Alignment.Stretch;
                                Margin: 10;
                                Children: [
                                    GameCommandSelect {
                                        HorizontalAlignment: Alignment.Stretch;
                                        Bindings: [
                                            Binding {
                                                Source: "item";
                                                Target: "Instance";
                                                Direction: BindingDirection.TwoWay;
                                            }
                                        ];
                                    }

                                    #*
                                    Static { Text: "Action"; }
                                    TextInput {
                                        HorizontalAlignment: Alignment.Stretch;
                                        Bindings: [
                                            Binding {
                                                Source: "item.ActionName";
                                                Target: "Text";
                                                Direction: BindingDirection.TwoWay;
                                            };
                                        ];
                                    }
                                    *#

                                    Switch {
                                        ChildBindScope: "item";
                                        Bindings: [
                                            Binding {
                                                Source: "item:typename";
                                                Target: "Value";
                                            }
                                        ];
                                        Items: { #todo: need to rethink design of this
                                            SpawnSquadCommand: List {
                                                Children: [
                                                    Static { Text: "Squad"; };
                                                    SquadSelect {
                                                        Bindings: [
                                                            Binding {
                                                                Source: "SquadName";
                                                                Target: "SelectedItem.name";
                                                                Direction: BindingDirection.TwoWay;
                                                            };
                                                        ]
                                                        ItemUI: {
                                                            HorizontalAlignment: Alignment.Stretch;
                                                            Bindings: [
                                                                Binding {
                                                                    Source: "Name";
                                                                    Target: "Text";
                                                                    Direction: BindingDirection.TwoWay;
                                                                };
                                                            ];
                                                        };
                                                    };
                                                ];
                                            };
                                        };
                                    };
                                    Static {
                                        Text: "Add Command";
                                        EventCommands: {
                                            Click: "AddItem";
                                        }
                                    }
                                ];
                            };
                        };

                        Divider { };

                        Static { Text: "`_Effects (On Enter)"; }
                        EffectsSelect {
                            HorizontalAlignment: Alignment.Stretch;
                            Bindings: [
                                {
                                    Direction: BindingDirection.TwoWay;
                                    Source: "OnEnterEffects";
                                    Target: "SelectedItem";
                                };
                            ];
                        }

                        Divider { };

                        Static { Text: "`_Max Uses"; }
                        NumericInput {
                            HorizontalAlignment: Alignment.Stretch;
                            Padding: [4 2];
                            Bindings: [
                                {
                                    Direction: BindingDirection.TwoWay;
                                    Source: "MaxUses";
                                    Target: "Value";
                                };
                            ];
                        };

                        Static { Text: "`_Use Count"; }
                        List {
                        	Direction: Direction.Horizontal;
                        	Margin: 10;
                        	Children: [
		                        Static {
		                            Bindings: [
		                                {
		                                    Source: "UseCount";
		                                    Target: "Text";
		                                };
		                            ];
		                        };
	                        ];
	                    };
                    ];
                };
            ];
        };

        Static {
            Padding: [10 5];
            HorizontalAlignment: Alignment.Middle;
            Text: "Close";
            EventCommands: {
                Click: "CloseModal";
            }
        };
    ];
}