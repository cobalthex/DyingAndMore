List {
	IsModal: true;
	HorizontalAlignment: Alignment.Center;
	VerticalAlignment: Alignment.Center;
	Direction: Direction.Vertical;

	Children: [
        List {
            Direction: Direction.Horizontal;
            HorizontalAlignment: Alignment.Stretch;
            EventCommands: { Drag: "DragModal"; };

            Children: [
                Static {
                    VerticalAlignment: Alignment.Middle;
                    Style: "Header";
                    Text: "Squad";
                };

                @!"UI/CloseButton.ui.tk";
            ];
        };

		ScrollBox {
			Style: "Frame";
			Size: [NaN 600];

			Children: [
    			List {
            		Direction: Direction.Horizontal;
            		Children: [
						List {
							Direction: Direction.Vertical;
							Size: [400 NaN];
							Margin: 10;
							Children: [
								Static { Text: "`_Name"; };
								TextInput {
									HorizontalAlignment: Alignment.Stretch;
									Bindings: [
										Binding {
											Source: "Name";
											Target: "Text";
											Direction: BindingDirection.TwoWay;
										};
									];
								};

								Static { }

								CheckBox {
									Text: "Don't spawn units\nautomatically";
									Bindings: [
										Binding {
											Source: "DontSpawnAutomatically";
											Target: "IsChecked";
											Direction: BindingDirection.TwoWay;
										};
									];
								};

								CheckBox {
									Text: "Disable spawning if\nleader is dead";
									Bindings: [
										Binding {
											Source: "DisableSpawningIfLeaderIsDead";
											Target: "IsChecked";
											Direction: BindingDirection.TwoWay;
										};
									];
								};

								Static { Text: "`_Minimum active units"; }
								NumericInput {
									Bindings: [
										Binding {
											Source: "MinLiveCount";
											Target: "Value";
											Direction: BindingDirection.TwoWay;
										};
									];
								};

								Static { Text: "`_Maximum active units"; }
								NumericInput {
									Bindings: [
										Binding {
											Source: "MaxLiveCount";
											Target: "Value";
											Direction: BindingDirection.TwoWay;
										};
									];
								};

								Static { Text: "`_Total spawn allowance"; }
								NumericInput {
									Bindings: [
										Binding {
											Source: "MaxSpawnCount";
											Target: "Value";
											Direction: BindingDirection.TwoWay;
										};
									];
								};

								Static { Text: "`_Spawn delay"; }
								DurationInput {
									ShowMinutes: false;
									Bindings: [
										Binding {
											Source: "SpawnDelay";
											Target: "Duration";
											Direction: BindingDirection.TwoWay;
										};
									];
								};

								Static { Text: "`_Current spawn count"; }
								NumericInput {
									Bindings: [
										Binding {
											Source: "TotalSpawnCount";
											Target: "Value";
											Direction: BindingDirection.TwoWay;
										};
									];
								};

								Static { Text: "`_Current active count"; }
								Static {
									Bindings: [
										Binding {
											Source: "Units.Count";
											Target: "Text";
										};
									];
								};
							];
						};

						Divider { Direction: Direction.Vertical; Padding: 10; };

						List {
							Direction: Direction.Vertical;
							VerticalAlignment: Alignment.Stretch;
							Margin: 10;
							Size: [400 NaN];
							Children: [
								Static { Text: "`+`_Spawns"; };
								Static { };

								Static { Text: "`_Leader (randomized)"; };
								ScrollBox {
									HorizontalAlignment: Alignment.Stretch;
									VerticalAlignment: Alignment.Stretch;
									StayAtEnd: true;
									Children: [
										ActorList {
											Name: "SquadLeaderSelect";
											HorizontalAlignment: Alignment.Stretch;
											Container: List {
												Direction: Direction.Vertical;
												HorizontalAlignment: Alignment.Stretch;
												Margin: 10;
											}
											Bindings: [
												Binding {
													Source: "LeaderTemplate";
													Target: "Items";
													Direction: BindingDirection.TwoWay;
												};
											];
											ItemUI: @"./ActorPreview.ui.tk";
											AddItemUI: Static {
												Text: "Select actor";
												HorizontalAlignment: Alignment.Middle;
												Style: "Button";

												ChildBindScope: "this";
												EventCommands: {
													Click: [
														"AddRootUI"
														List {
															Name: "SquadActorSelector";
															HorizontalAlignment: Alignment.Center;
															VerticalAlignment: Alignment.Center;
															IsModal: true;
															Padding: 10;
															Margin: 10;
															Direction: Direction.Vertical;
															Style: "Frame";
															Children: [
																EntitySelector {
																	SearchPaths: ["Actors"];

																	Bindings: [
																		Binding {
																			Source: "item";
																			Target: "SelectedEntity";
																			Direction: BindingDirection.TwoWay;
																		};
																	];
																	EventCommands: {
																		Click: [ # hack (SelectionChanged will trigger before bindings update)
																			"Multiple" [
																				["Routed" ["SquadLeaderSelect" "AddItem"]]
																				["RemoveUI" "SquadActorSelector"]
																			]
																		];
																	}
																	Size: [400 400];
																};

																Static {
																	Text: "Cancel";
																	HorizontalAlignment: Alignment.Center;
																	Padding: 10;
																	EventCommands: {
																		Click: ["RemoveUI" "SquadActorSelector"];
																	};
																};
															];
														};
													];
												};
											};
										};
									];
								};

								Static { Text: "`_Units"; };
								ScrollBox {
									HorizontalAlignment: Alignment.Stretch;
									VerticalAlignment: Alignment.Stretch;
									StayAtEnd: true;
									Children: [
										ActorList {
											Name: "SquadUnitSelect";
											HorizontalAlignment: Alignment.Stretch;
											Container: List {
												Direction: Direction.Vertical;
												HorizontalAlignment: Alignment.Stretch;
												Margin: 10;
											}
											Bindings: [
												Binding {
													Source: "UnitsTemplate";
													Target: "Items";
													Direction: BindingDirection.TwoWay;
												};
											];
											ItemUI: @"./ActorPreview.ui.tk";
											AddItemUI: Static {
												Text: "Select actor";
												HorizontalAlignment: Alignment.Middle;
												Style: "Button";

												ChildBindScope: "this";
												EventCommands: {
													Click: [
														"AddRootUI"
														List {
															Name: "SquadActorSelector";
															HorizontalAlignment: Alignment.Center;
															VerticalAlignment: Alignment.Center;
															IsModal: true;
															Padding: 10;
															Margin: 10;
															Direction: Direction.Vertical;
															Style: "Frame";
															Children: [
																EntitySelector {
																	SearchPaths: ["Actors"];

																	Bindings: [
																		Binding {
																			Source: "item";
																			Target: "SelectedEntity";
																			Direction: BindingDirection.TwoWay;
																		};
																	];
																	EventCommands: {
																		Click: [ # hack (SelectionChanged will trigger before bindings update)
																			"Multiple" [
																				["Routed" ["SquadUnitSelect" "AddItem"]]
																				["RemoveUI" "SquadActorSelector"]
																			]
																		];
																	}
																	Size: [400 400];
																};

																Static {
																	Text: "Cancel";
																	HorizontalAlignment: Alignment.Center;
																	Padding: 10;
																	EventCommands: {
																		Click: ["RemoveUI" "SquadActorSelector"];
																	};
																};
															];
														};
													];
												};
											};
										};
									];
								};

								Static {
									Text: "Spawn units";
		            				Style: "Button";
									HorizontalAlignment: Alignment.Center;
									EventCommands: {
										Click: "SelectedSquadSpawnUnits";
									};
								};
							];
						};
					];
				};
			];
		};
	];
};